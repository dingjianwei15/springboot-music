<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.music.dao.SingerMapper">
    <resultMap id="singer" type="com.my.music.domain.singer" >
        <id column="pid" jdbcType="VARCHAR" property="pid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="picture" jdbcType="VARCHAR" property="picture"/>
        <result column="birth" jdbcType="VARCHAR" property="birth"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="introduction" jdbcType="VARCHAR" property="introduction"/>
    </resultMap>
    <insert id="addSinger" parameterType="com.my.music.domain.singer">
        insert into singer (pid,name,sex,picture,birth,location,introduction) values (#{pid},#{name},#{sex},#{picture},#{birth},#{location},#{introduction})
    </insert>

    <select id="querySingers" parameterType="com.my.music.domain.singer" resultType="com.my.music.domain.singer">
        select * from singer where 1=1
        <if test="pid != null and pid != ''">
            and pid = #{pid}
        </if>
        <if test="name != null and name != ''">
            and name = #{name}
        </if>
        <if test="sex != null and sex != ''">
            and sex = #{sex}
        </if>
        <if test="picture != null and picture != ''">
            and picture = #{picture}
        </if>
        <if test="birth != null and birth != ''">
            and birth = #{birth}
        </if>
        <if test="location != null and location != ''">
            and location = #{location}
        </if>
        <if test="introduction != null and introduction != ''">
            and introduction = #{introduction}
        </if>
    </select>

    <update id="updateSinger" parameterType="com.my.music.domain.singer">
        update singer set name = #{name},sex = #{sex},picture = #{picture},birth = #{birth},location=#{location},introduction=#{introduction}
        where pid = #{pid}
    </update>

    <delete id="deleteSinger" parameterType="java.util.List">
        delete from singer where pid in
        <foreach collection="singerLists" item="item" index="index" open="(" separator="," close=")">
            #{item.pid}
        </foreach>
    </delete>

</mapper>
